// NOTE This file is auto-generated by Contentlayer

import type {
  Markdown,
  MDX,
  ImageFieldData,
  IsoDateTimeString,
} from "contentlayer/core";
import * as Local from "contentlayer/source-files";

export { isType } from "contentlayer/client";

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString };

/** Document types */
export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string;
  _raw: Local.RawDocumentData;
  type: "Post";
  title: string;
  publishedAt: string;
  description?: string | undefined;
  status: "draft" | "published";
  tags?: Tag[] | undefined;
  /** MDX file body */
  body: MDX;
  slug: string;
};

export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string;
  _raw: Local.RawDocumentData;
  type: "Project";
  title: string;
  excerpt: string;
  stack?: string[] | undefined;
  githubUrl: string;
  /** MDX file body */
  body: MDX;
  slug: string;
};

/** Nested types */
export type Tag = {
  /** File path relative to `contentDirPath` */
  _id: string;
  _raw: Local.RawDocumentData;
  type: "Tag";
  title: "Next.js" | "MDX" | "Next Conf" | "React Conf";
  slug: "next" | "mdx" | "next-conf" | "react-conf";
};

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes;
export type AllTypeNames = DocumentTypeNames | NestedTypeNames;

export type DocumentTypes = Post | Project;
export type DocumentTypeNames = "Post" | "Project";

export type NestedTypes = Tag;
export type NestedTypeNames = "Tag";

export type DataExports = {
  allDocuments: DocumentTypes[];
  allPosts: Post[];
  allProjects: Project[];
};

export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes;
  documentTypeMap: DocumentTypeMap;
  documentTypeNames: DocumentTypeNames;
  nestedTypes: NestedTypes;
  nestedTypeMap: NestedTypeMap;
  nestedTypeNames: NestedTypeNames;
  allTypeNames: AllTypeNames;
  dataExports: DataExports;
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Post: Post;
  Project: Project;
};

export type NestedTypeMap = {
  Tag: Tag;
};
